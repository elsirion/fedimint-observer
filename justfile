# THIS FILE IS AUTOGENERATED FROM FLAKEBOX CONFIGURATION

import "justfile.fmo.just"

alias b := build
alias c := check
alias t := test


[private]
default:
  @just --list


# run `cargo build` on everything
build_package PACKAGE *ARGS:
  #!/usr/bin/env bash
  set -euo pipefail
  if [ ! -f Cargo.toml ]; then
    cd {{invocation_directory()}}
  fi
  cargo build -p {{PACKAGE}} {{ARGS}}

build *ARGS:
  just build_package fmo_server {{ARGS}}
  just build_package fmo_frontend --target wasm32-unknown-unknown {{ARGS}}

# run `cargo check` on everything
check_package PACKAGE *ARGS:
  #!/usr/bin/env bash
  set -euo pipefail
  if [ ! -f Cargo.toml ]; then
    cd {{invocation_directory()}}
  fi
  cargo check -p {{PACKAGE}} {{ARGS}}

check *ARGS:
  just check_package fmo_server {{ARGS}}
  just check_package fmo_frontend --target wasm32-unknown-unknown {{ARGS}}

# run all checks recommended before opening a PR
final-check: lint clippy
  #!/usr/bin/env bash
  set -euo pipefail
  if [ ! -f Cargo.toml ]; then
    cd {{invocation_directory()}}
  fi
  cargo test --doc
  just test


# run code formatters
format:
  #!/usr/bin/env bash
  set -euo pipefail
  if [ ! -f Cargo.toml ]; then
    cd {{invocation_directory()}}
  fi
  cargo fmt --all
  nixpkgs-fmt $(echo **.nix)


# run lints (git pre-commit hook)
lint:
  #!/usr/bin/env bash
  set -euo pipefail
  env NO_STASH=true $(git rev-parse --git-common-dir)/hooks/pre-commit


# run tests
test_package PACKAGE:
  #!/usr/bin/env bash
  set -euo pipefail
  if [ ! -f Cargo.toml ]; then
    cd {{invocation_directory()}}
  fi
  cargo test -p {{PACKAGE}}

test:
  just test_package fmo_server
  just test_package fmo_frontend --target wasm32-unknown-unknown

# run and restart on changes
watch *ARGS="-x run":
  #!/usr/bin/env bash
  set -euo pipefail
  if [ ! -f Cargo.toml ]; then
    cd {{invocation_directory()}}
  fi
  env RUST_LOG=${RUST_LOG:-debug} cargo watch {{ARGS}}


# run `cargo clippy` on everything
clippy_package PACKAGE *ARGS="--locked":
  cargo clippy -p {{PACKAGE}} {{ARGS}}

clippy *ARGS="--locked":
  just clippy_package fmo_server {{ARGS}}
  RUSTFLAGS="$RUSTFLAGS --cfg getrandom_backend=\"wasm_js\"" just clippy_package fmo_frontend --target wasm32-unknown-unknown {{ARGS}}

# run `cargo clippy --fix` on everything
clippy_fix-package PACKAGE *ARGS="--locked --offline":
  cargo clippy -p {{PACKAGE}} {{ARGS}} --fix

clippy-fix *ARGS="--locked --offline":
  just clippy_fix-package fmo_server {{ARGS}}
  just clippy_fix-package fmo_frontend --target wasm32-unknown-unknown {{ARGS}}

# run `semgrep`
semgrep:
  env SEMGREP_ENABLE_VERSION_CHECK=0 \
    semgrep --error --no-rewrite-rule-ids --config .config/semgrep.yaml


# check typos
[no-exit-message]
typos *PARAMS:
  #!/usr/bin/env bash
  set -eo pipefail

  export FLAKEBOX_GIT_LS
  FLAKEBOX_GIT_LS="$(git ls-files)"
  export FLAKEBOX_GIT_LS_TEXT
  FLAKEBOX_GIT_LS_TEXT="$(echo "$FLAKEBOX_GIT_LS" | grep -v -E "^db/|\.(png|ods|jpg|jpeg|woff2|keystore|wasm|ttf|jar|ico)\$")"


  if ! echo "$FLAKEBOX_GIT_LS_TEXT" | typos {{PARAMS}} --file-list - --force-exclude ; then
    >&2 echo "Typos found: Valid new words can be added to '.typos.toml'"
    return 1
  fi

# fix all typos
[no-exit-message]
typos-fix-all:
  just typos -w

# THIS FILE IS AUTOGENERATED FROM FLAKEBOX CONFIGURATION
